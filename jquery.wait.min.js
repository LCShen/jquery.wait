/**
 * jquery.wait - insert simple delays into your jquery method chains
 * @author Matthew Lee matt@wahilacreative.com
 */(function(e){function t(e,t,n){var r=this;this._fncQueue=typeof n=="undefined"?[]:n;this._delayCompleted=!1;this._$real=e;if(typeof t=="number"&&t>=0&&t<Infinity)this.timeoutKey=window.setTimeout(function(){r._performDummyQueueActions()},t);else{if(t===null||typeof t!="object"||typeof t.promise!="function")return e;t.then(function(){r._performDummyQueueActions()})}}t.prototype._addToQueue=function(e,t){this._fncQueue.unshift({fnc:e,arg:t});return this._delayCompleted?this._performDummyQueueActions():this};t.prototype._performDummyQueueActions=function(){this._delayCompleted=!0;var e;while(this._fncQueue.length>0){e=this._fncQueue.pop();if(e.fnc==="wait"){e.arg.push(this._fncQueue);return this._$real=this._$real[e.fnc].apply(this._$real,e.arg)}this._$real=this._$real[e.fnc].apply(this._$real,e.arg)}return this};e.fn.wait=function(e,n){return new t(this,e,n)};for(var n in e.fn){if(typeof e.fn[n]!="function"||!e.fn.hasOwnProperty(n))continue;t.prototype[n]=function(e){return function(){var t=Array.prototype.slice.call(arguments);return this._addToQueue(e,t)}}(n)}})(jQuery);